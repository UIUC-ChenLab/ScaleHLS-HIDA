name: Build and Test

on: [push, pull_request]

jobs:
  build-scalehls:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with submodules
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Ensures all submodules are cloned

      # Step 2: Generate the hash for the LLVM submodule
      - name: Get LLVM Hash
        id: get-llvm-hash
        run: echo "hash=$(git -C ./polygeist rev-parse @:./llvm-project)" >> $GITHUB_OUTPUT

      # Step 3: Determine if a rebuild of LLVM is required based on commit message
      - name: Check for 'rebuild llvm' in commit message
        id: determine-rebuild
        run: |
          if git log -1 --pretty=%B | grep -q "rebuild llvm"; then
            echo "force_rebuild=true" >> $GITHUB_OUTPUT
          else
            echo "force_rebuild=false" >> $GITHUB_OUTPUT
          fi

      # Step 4: Cache the LLVM build directory
      - name: Cache LLVM Build
        if: steps.determine-rebuild.outputs.force_rebuild == 'false'
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: polygeist/llvm-project/build
          key: ${{ runner.os }}-llvm-${{ steps.get-llvm-hash.outputs.hash }}

      # Step 5: Rebuild LLVM if needed
      - name: Rebuild LLVM
        if: steps.determine-rebuild.outputs.force_rebuild == 'true' || steps.cache-llvm.outputs.cache-hit != 'true'
        id: rebuild-llvm
        run: |
          mkdir -p polygeist/llvm-project/build
          cd polygeist/llvm-project/build
          cmake ../llvm \
            -DLLVM_ENABLE_PROJECTS="clang;mlir" \
            -DLLVM_TARGETS_TO_BUILD="host" \
            -DCMAKE_BUILD_TYPE=RELEASE \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DLLVM_EXTERNAL_PROJECTS="polygeist" \
            -DLLVM_EXTERNAL_POLYGEIST_SOURCE_DIR=../../
          cmake --build . -j $(nproc)

      # Step 6: Update LLVM cache after a successful rebuild
      - name: Update LLVM Cache
        if: steps.rebuild-llvm.outcome == 'success'
        id: update-cache-llvm
        uses: actions/cache@v4
        with:
          path: polygeist/llvm-project/build
          key: ${{ runner.os }}-llvm-${{ steps.get-llvm-hash.outputs.hash }}

      # Step 7: Build and test ScaleHLS
      - name: Build and Test ScaleHLS
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DMLIR_DIR="$PWD/../polygeist/llvm-project/build/lib/cmake/mlir" \
            -DLLVM_DIR="$PWD/../polygeist/llvm-project/build/lib/cmake/llvm" \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            -DCMAKE_BUILD_TYPE=DEBUG \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++
          cmake --build . --target check-scalehls -j $(nproc)
